<style lang="less">
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
  page {
    background-color: #F2f2f2;
  }
  .bgc_f {
    background: #fff;
  }
  view,
  text {
    font-size: 24rpx;
  }
  image {
    width: 100%;
    height: 100%;
  }
  .flex_column {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }
  .t20 {
    margin-top: 20rpx;
    background: #fff;
  }
  .jinse {
    background: linear-gradient(to right, RGBA(227, 211, 175, 1), RGBA(194, 179, 135, 1));
  }
  .jinse:hover {
    background: linear-gradient(to right, RGBA(227, 211, 175, 1), RGBA(194, 179, 135, 1));
  }
  .icon {
    width: 22px;
    height: 22px;
    border: 1px solid RGBA(194, 179, 135, 1);
    border-radius: 50%;
    box-sizing: border-box;
  }
</style>

<script>
  import wepy from 'wepy';
  import 'wepy-async-function';
  export default class extends wepy.app {
    config = {
      pages: ['pages/index', 'pages/index1'],
      tabBar: {
        color: '#707070',
        selectedColor: '#36a2e6',
        backgroundColor: '#fff',
        borderStyle: 'black',
        list: [{
            pagePath: 'pages/index',
            text: '首页'
          },
          {
            pagePath: 'pages/index1',
            text: '其他'
          }
        ]
      },
      window: {
        backgroundTextStyle: 'white',
        navigationBarTextStyle: 'white',
        navigationBarTitleText: '奢物',
        navigationBarBackgroundColor: '#38373D',
        backgroundColor: '#F2f2f2',
        enablePullDownRefresh: true
      }
    };
    globalData = {
      userInfo: null
    };
    constructor() {
      super();
      this.use('requestfix');
    }
    onLaunch() {
      this.testAsync();
    }
    sleep(s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved');
        }, s * 1000);
      });
    }
    async testAsync() {
      const data = await this.sleep(3);
      console.log(data);
    }
    getUserInfo(cb) {
      const that = this;
      if (this.globalData.userInfo) {
        return this.globalData.userInfo;
      }
      wepy.getUserInfo({
        success(res) {
          that.globalData.userInfo = res.userInfo;
          cb && cb(res.userInfo);
        }
      });
    }
  }
</script>
